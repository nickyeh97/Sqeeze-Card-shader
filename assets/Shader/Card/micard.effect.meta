{
  "ver": "1.0.25",
  "uuid": "02f942dd-f5b6-4a61-8a58-86834356d63a",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nuniform float sprWidth;\nuniform float sprHight;\nuniform vec2 disX;\nuniform vec2 disY;\nuniform vec4 xlist;\nuniform vec4 ylist;\nvarying highp float v_sprWidth;\nvarying highp float v_sprHight;\nvarying highp vec4 v_xlist;\nvarying highp vec4 v_ylist;\nvarying highp vec2 v_disX;\nvarying highp vec2 v_disY;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_sprWidth = sprWidth;\n  v_sprHight = sprHight;\n  v_xlist = xlist;\n  v_ylist = ylist;\n  v_disX = disX;\n  v_disY = disY;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvarying highp float v_sprWidth;\nvarying highp float v_sprHight;\nvarying highp vec4 v_xlist;\nvarying highp vec4 v_ylist;\nvarying highp vec2 v_disX;\nvarying highp vec2 v_disY;\nbool isHide(float px , float py)\n{\n  bool b = false;\n  float dx = px * v_sprWidth;\n  float dy = py * v_sprHight;\n  if (v_disX[0] != 0.0 || v_disX[1] != 0.0)\n  {\n      if (dx >= v_disX[0] && dx <= v_disX[1]){\n          return true;\n      }\n  }\n  else if (v_disY[0] != 0.0 || v_disY[1] != 0.0)\n  {\n      if (dy >= v_disY[0] && dy <= v_disY[1]){\n          return true;\n      }\n  }\n  if ( ((v_ylist[0]>=dy) != (v_ylist[2]>=dy)) && (dx < (v_xlist[2]-v_xlist[0]) * (dy-v_ylist[0]) / (v_ylist[2]-v_ylist[0]) + v_xlist[0]) )\n  {\n    b = !b;\n  }\n  if ( ((v_ylist[1]>=dy) != (v_ylist[0]>=dy)) && (dx < (v_xlist[0]-v_xlist[1]) * (dy-v_ylist[1]) / (v_ylist[0]-v_ylist[1]) + v_xlist[1]) )\n  {\n    b = !b;\n  }\n  if ( ((v_ylist[2]>=dy) != (v_ylist[1]>=dy)) && (dx < (v_xlist[1]-v_xlist[2]) * (dy-v_ylist[2]) / (v_ylist[1]-v_ylist[2]) + v_xlist[2]) )\n  {\n    b = !b;\n  }\n  return b;\n}\nvoid main () {\n  vec4 color = texture2D(texture, v_uv0);\n  bool hide = isHide(v_uv0.x,v_uv0.y);\n  if (hide)\n  {\n    color.a = 0.0;\n  }\n  gl_FragColor = color;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nuniform PROPERTIES{\n  float sprWidth;\n  float sprHight;\n  vec2 disX;\n  vec2 disY;\n  vec2 _padding;\n  vec4 xlist;\n  vec4 ylist;\n};\nout highp float v_sprWidth;\nout highp float v_sprHight;\nout highp vec4 v_xlist;\nout highp vec4 v_ylist;\nout highp vec2 v_disX;\nout highp vec2 v_disY;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_sprWidth = sprWidth;\n  v_sprHight = sprHight;\n  v_xlist = xlist;\n  v_ylist = ylist;\n  v_disX = disX;\n  v_disY = disY;\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nvarying highp float v_sprWidth;\nvarying highp float v_sprHight;\nvarying highp vec4 v_xlist;\nvarying highp vec4 v_ylist;\nvarying highp vec2 v_disX;\nvarying highp vec2 v_disY;\nbool isHide(float px , float py)\n{\n  bool b = false;\n  float dx = px * v_sprWidth;\n  float dy = py * v_sprHight;\n  if (v_disX[0] != 0.0 || v_disX[1] != 0.0)\n  {\n      if (dx >= v_disX[0] && dx <= v_disX[1]){\n          return true;\n      }\n  }\n  else if (v_disY[0] != 0.0 || v_disY[1] != 0.0)\n  {\n      if (dy >= v_disY[0] && dy <= v_disY[1]){\n          return true;\n      }\n  }\n  if ( ((v_ylist[0]>=dy) != (v_ylist[2]>=dy)) && (dx < (v_xlist[2]-v_xlist[0]) * (dy-v_ylist[0]) / (v_ylist[2]-v_ylist[0]) + v_xlist[0]) )\n  {\n    b = !b;\n  }\n  if ( ((v_ylist[1]>=dy) != (v_ylist[0]>=dy)) && (dx < (v_xlist[0]-v_xlist[1]) * (dy-v_ylist[1]) / (v_ylist[0]-v_ylist[1]) + v_xlist[1]) )\n  {\n    b = !b;\n  }\n  if ( ((v_ylist[2]>=dy) != (v_ylist[1]>=dy)) && (dx < (v_xlist[1]-v_xlist[2]) * (dy-v_ylist[2]) / (v_ylist[1]-v_ylist[2]) + v_xlist[2]) )\n  {\n    b = !b;\n  }\n  return b;\n}\nvoid main () {\n  vec4 color = texture2D(texture, v_uv0);\n  bool hide = isHide(v_uv0.x,v_uv0.y);\n  if (hide)\n  {\n    color.a = 0.0;\n  }\n  gl_FragColor = color;\n}"
      }
    }
  ],
  "subMetas": {}
}